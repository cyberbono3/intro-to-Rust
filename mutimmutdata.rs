// //Разделяемые ^ изменяемые данные
// fn main() {
//     let mut xs = vec![1, 2, 3 ,4];
//     let x: &i32 = &xs[0]; // константная ссылка внутри этого xs
//     // буфер будет переалоцирован в результате чего эта ссылка станет битой 
//     xs.push(92); //метод принимает xs  по некостантной ссылке 
// }

// инвалидация итераторов есть константная ссылка и мы не можем ничего поменять в ней
fn push_all(xs: &mut Vec<i32>, ys: &Vec<i32>) { 
    for &y in ys { 
        xs.push(y); 
        } 
    } 
    
fn main() { 
    let mut xs = vec![1, 2, 3, 4]; 
    let ys = vec![1, 2, 3, 4]; 
    push_all(&mut xs, &ys); 
   }